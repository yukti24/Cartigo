{"version":3,"file":"default-node_modules_ionic_core_dist_esm_theme-ff3fc52f_js.js","mappings":";;;;;;;;;;;;;;;;;;;;;+CACA;;AADA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAWC,EAAX,EAAkB;AACpC,SAAOA,EAAE,CAACC,OAAH,CAAWF,QAAX,MAAyB,IAAhC;AACD,CAFD;AAGA;AACA;AACA;;;AACA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAQC,WAAR,EAAwB;AACjD,SAAQ,OAAOD,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACE,MAAN,GAAe,CAA7C,GAAkDC,MAAM,CAACC,MAAP;AAAgB,iBAAa;AAA7B,yBAAiDJ,KAAjD,GAA2D,IAA3D,GAAmEC,WAAnE,CAAlD,GAAoIA,WAA3I;AACD,CAFD;;AAGA,IAAMI,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAa;AAChC,MAAIA,OAAO,KAAKC,SAAhB,EAA2B;AACzB,QAAMC,KAAK,GAAGC,KAAK,CAACC,OAAN,CAAcJ,OAAd,IAAyBA,OAAzB,GAAmCA,OAAO,CAACK,KAAR,CAAc,GAAd,CAAjD;AACA,WAAOH,KAAK,CACTI,MADI,CACG,UAAAC,CAAC;AAAA,aAAIA,CAAC,IAAI,IAAT;AAAA,KADJ,EAEJC,GAFI,CAEA,UAAAD,CAAC;AAAA,aAAIA,CAAC,CAACE,IAAF,EAAJ;AAAA,KAFD,EAGJH,MAHI,CAGG,UAAAC,CAAC;AAAA,aAAIA,CAAC,KAAK,EAAV;AAAA,KAHJ,CAAP;AAID;;AACD,SAAO,EAAP;AACD,CATD;;AAUA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACV,OAAD,EAAa;AAC/B,MAAMQ,GAAG,GAAG,EAAZ;AACAT,EAAAA,YAAY,CAACC,OAAD,CAAZ,CAAsBW,OAAtB,CAA8B,UAAAJ,CAAC;AAAA,WAAIC,GAAG,CAACD,CAAD,CAAH,GAAS,IAAb;AAAA,GAA/B;AACA,SAAOC,GAAP;AACD,CAJD;;AAKA,IAAMI,MAAM,GAAG,sBAAf;;AACA,IAAMC,OAAO;AAAA,wMAAG,iBAAOC,GAAP,EAAYC,EAAZ,EAAgBC,SAAhB,EAA2BC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACVH,GAAG,IAAI,IAAP,IAAeA,GAAG,CAAC,CAAD,CAAH,KAAW,GAA1B,IAAiC,CAACF,MAAM,CAACM,IAAP,CAAYJ,GAAZ,CADxB;AAAA;AAAA;AAAA;;AAENK,YAAAA,MAFM,GAEGC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAFH;;AAAA,iBAGRF,MAHQ;AAAA;AAAA;AAAA;;AAIV,gBAAIJ,EAAE,IAAI,IAAV,EAAgB;AACdA,cAAAA,EAAE,CAACO,cAAH;AACD;;AANS,6CAOHH,MAAM,CAACI,IAAP,CAAYT,GAAZ,EAAiBE,SAAjB,EAA4BC,SAA5B,CAPG;;AAAA;AAAA,6CAUP,KAVO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPJ,OAAO;AAAA;AAAA;AAAA,GAAb","sources":["./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js"],"sourcesContent":["const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"names":["hostContext","selector","el","closest","createColorClasses","color","cssClassMap","length","Object","assign","getClassList","classes","undefined","array","Array","isArray","split","filter","c","map","trim","getClassMap","forEach","SCHEME","openURL","url","ev","direction","animation","test","router","document","querySelector","preventDefault","push","g","h","o"],"sourceRoot":"webpack:///"}